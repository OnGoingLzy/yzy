<template>
	<view>
		<view class="example">
			<uni-forms label-width="100" label-position="left" label-align="left">
				<uni-forms-item label="用药人姓名" required>
					<uni-easyinput  placeholder="请输入姓名" v-model="authObj.goodsUserName"/>
				</uni-forms-item>
				<uni-forms-item label="身份证号" required>
					<uni-easyinput placeholder="请输入身份证号" v-model="authObj.idCard" @change="getBirthday(authObj.idCard)"/>
				</uni-forms-item>
				<uni-forms-item label="性别" required>
					<uni-data-checkbox :localdata="sexs" v-model="authObj.sex"/> 
				</uni-forms-item>
				<uni-forms-item label="与您关系" required>
					<picker @change="bindPickerChange" :value="index" :range="array" >
						<view  class="uni-input" style="border: #ccc 1px solid;border-radius: 6px;width: 50%;height: 30px;font-size: 14px;" >{{array[index]}}</view>
					</picker>
				</uni-forms-item>
				<uni-forms-item label="病史">
					<uni-easyinput type="textarea"  placeholder="请输入病史,例如过敏史,家族病史,过往病史等" v-model="authObj.medicalHistory"/>
				</uni-forms-item>
				<uni-forms-item label="出生日期"> 
					<uni-easyinput  v-model="birthday" disabled="true"/>
				</uni-forms-item> 
			</uni-forms>
			<button  @tap="addGoodsUser()" class="id-button">
			  <text style="line-height: 30px;font-size: 24px;">添加</text>
			</button>   
		</view>
	</view>
</template>

<script>
	import request from '@/common/api/request.js'
	export default {
		name:"add-MedicationUsers",
		data() {
			return {
				index:0,
				array: ['本人','家属','亲戚','朋友','其他'],
				frontImage: null,
				backImage: null,
				popup:true,
				popupidverify:true,
				msg:'',
				birthday:'',
				authObj: {
					goodsUserName:'',
					idCard:'',
					phone:'',
					relationship:'本人', 
					sex:'',
					openid:uni.getStorageSync("openid"),
					medicalHistory:''//病史
				},
				users:[{'isSelected': false}],
				isEnableClick: true,
				choiceObj: null,
				// 单选数据源
				sexs: [{
					text: '男',
					value: 0
				}, {
					text: '女',
					value: 1
				}],
			};
		},
		mounted() {
			this.authObj.phone = uni.getStorageSync('phone')
		},
		methods: {
			async addGoodsUser(){
				var that = this
				if(this.isEnableClick==false) return
				if(this.authObj.goodsUserName=='' || this.authObj.idCard==''){
					uni.showToast({
						title:"请输入信息",
						icon:"error"
					})
					return
				}
				const nameRegex = /^[\u4e00-\u9fa5]{2,}$/;       // 中文姓名正则表达式，至少2个中文字符
				      const idCardRegex = /(^\d{15}$)|(^\d{18}$)|(^\d{17}(\d|X|x)$)/;  // 身份证号正则表达式，支持15位、18位和17位带校验码（最后一位可以是数字或字母X）
				
				      if (!nameRegex.test(this.authObj.goodsUserName)) {
				        // 姓名不符合规则
				        uni.showToast({
				        	title:"姓名不合规",
				        	icon:"error"
				        })
				        return;
				      }
				
				      if (!idCardRegex.test(this.authObj.idCard)) {
				        // 身份证号不符合规则
				        uni.showToast({
				        	title:"请输入正确身份证号",
				        	icon:"none"
				        })
				        return;
				      }
				uni.showLoading({
					title: '认证中...'
				})
				this.isEnableClick=false
				const url = '/api/user/addGoodsUser';
				const method = 'POST'; 
				const data = {
					goodsUserInfo: this.authObj
				};
				try {
					const response = await request('yzy_app', url, method, data);
					console.log(response);		//统一格式：{"data":{}, "flag":99, "result":"成功"}
					if(response.code == 99 &&response.data.flag==99){
							
						uni.hideLoading()
						  uni.showToast({
						  	title:"认证结果:"+response.data.sm,
							
						  })
						that.addOver("1")
					}
					else {
						uni.showToast({
						  title:'认证失败:'+response.data.sm,
						  icon:"none",
						  duration: 2500,
						})
						// that.addOver("1")
						setTimeout(function(){
							uni.hideLoading()
						},1000)
						
					}
					
					this.isEnableClick=true
				} catch (error) {
					console.log(error);
					uni.hideLoading()
					this.isEnableClick=true
				}
				
			},
			addOver(res){
				//通知父组件添加完毕
				var that = this
				setTimeout(function() {
				  // 这里写要延时执行的代码、
				  that.$emit('fatherMethod', res);
				}, 2000);
				
			},
			bindPickerChange: function(e) {
			    console.log('picker发送选择改变，携带值为', e.detail.value)
			    this.index = e.detail.value
				this.authObj.relationship = this.array[this.index]
			},
			getBirthday(idcard) {
				const birthday = idcard.slice(6,14)
				this.birthday = birthday				  
			},
		}	
	}
</script>

<style  lang="scss">
.example {
		padding: 15px;
		background-color: #fff;
		border-radius: 15px;
		width: 90vw;
	}
</style>