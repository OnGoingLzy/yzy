<template>
	<view class="wrap">
		<view class="top">
			<view class="address-container">
				<view class="choose-address-box" v-if="currentLocation">
					<view style="width: 80%;">
						<view>
							<text style="font-weight: bold;">{{currentLocation.name}}</text>
						</view>
						<view>
							<text>{{currentLocation.address}}</text>
						</view>	
					</view>
					<view class="alter-address-button" @tap="authVerification">
						<text>修改地址</text>
					</view>
				</view>
				<view class="choose-address-box" v-if="!currentLocation">
					<view style="border: 1px #1296DB solid;border-radius: 5px;color: #1296DB;margin: 2vw;width: 90vw;text-align: center;" @tap="authVerification" v-if="!currentLocation">
						<text>选择收货地址></text>
					</view>
				</view>	
			</view>
			
			<!-- <view class="content">
				<view class="content-tip">示例:张三，138xxxxxxxx，上海市浦东新区xx路xx号xx室
                </view>
			    <auto-parse-address boxClass="c-box" @result="result"></auto-parse-address>
			</view> -->
			<view style="border-radius: 10px;box-shadow: 2px -1px 10px 0.5px rgba(0, 0, 0, 0.2);margin-top: 10px;">
				<view class="item">
					<view class="left">收货人</view>
					<input type="text" placeholder-class="line" placeholder="请填写收货人姓名" v-model="pathObj.name" @blur="validateForm('name')" @change="validateForm('name')"/>
				</view>
				<view class="item">
					<view class="left">手机号码</view>
					<input type="text" placeholder-class="line" placeholder="请填写收货人手机号" v-model="pathObj.tel" @blur="validateForm('phone')" @change="validateForm('phone')"/>			
				</view>
				<!-- <view class="item">
					<view class="left">所在地区</view>
					<view @tap="showPicker" >{{pathObj.city}}</view>
				</view> -->
				<view class="item">
					<view class="left">详细地址</view>
					<input type="text" placeholder-class="line" placeholder="街道、楼牌等" v-model="pathObj.details" /> 
				</view>
				<view class="item" @change="radioChange">
					<view class="left">设为默认地址</view>
					<switch @change="radioChange" color="#1296DB" :checked="pathObj.isDefault==1"/>
				</view>
				<view style="position: fixed;bottom: 20px;width: 94VW;" @tap='addOrUpdateAddress()'> 
					<view class="add-path-btn">保存</view>
				</view>
				
			</view>
			
		</view>
		
	</view>
</template>

<script>
	import autoAddressParse from '../../components/uni/auto-parse-address/auto-parse-address.vue'//路径修改为自己的实际路径
	import mpvuePicker from '../../components/uni/mpvue-citypicker/mpvueCityPicker.vue'
	import request from '@/common/api/request.js'
export default {
	props: {
		list: {
			type: Array,
			required: false,
		},
	},
	data() {
		return {
			currentLocation:null, //用户选择的地址
			pickerValueDefault: [0,0,1],
			pathObj:{
				name:"",
				tel:"",
				city:"",
				details:"",
				isDefault:0,
				openid: uni.getStorageSync("openid"),
				userId:0,
				id:0,
				longitude:0,
				latitude:0,
			},
			//要修改的地址在list中的索引（默认-1 表示添加）
			i:-1,
			//是否修改的状态
			isStatus:false,
			rules: {
				name: [{
					required: true,
					message: '请输入姓名',
					trigger: ['blur', 'change']
				}],
				tel: [{
					required: true,
					message: '请输入手机号',
					trigger: ['blur', 'change'],
					type: 'number',
				}, {
					validator: function(rule, value, callback) {
						if (/^1[34578]\d{9}$/.test(value) == false) {
							callback(new Error("手机号格式错误"));
						} else {
							callback();
						}
					},
					trigger: "blur"
				}],
				detail: [{
					required: true,
					message: '请输入详细地址',
					trigger: ['blur', 'change']
				}],
			}
		};
	},
	onLoad(e) {
		if (e.data) {
		  uni.setNavigationBarTitle({
			title: "修改地址",
		  });
		  let result = JSON.parse(e.data);
		  this.pathObj = result.item;
		  this.currentLocation = {
			  name:this.pathObj.city,
			  address:this.pathObj.details
		  }	
		  this.pathObj.details = this.pathObj.details.split(";")[1]
		  this.isStatus = true;
		}
	  },
	  components: {
		"auto-parse-address": autoAddressParse,
		mpvuePicker,
	  },
	//页面生命周期（微信开发工具中没有使用导航栏改用保存按钮）
	onNavigationBarButtonTap() {
	  },

	methods: {
		authVerification () {
					  uni.getSetting({
					    success: (res) => {
					      if (res.authSetting['scope.userLocation']) { /* 用户授权成功时走这里 */
					        this.handerChooseLocation()
					      } else if (res.authSetting['scope.userLocation'] === undefined) { /* 用户未授权时走这里 */
					        console.log('没有授权')
					        this.handleOpenSetting()
					      } else { /* 用户拒绝了授权后走这里 */
					        console.log('拒绝了授权 false')
					        this.handleOpenSetting()
					      }
					    },
					  })
					},
					handerChooseLocation (latitude, longitude) {
						var that = this
					  uni.chooseLocation({
					    latitude: latitude || '',
					    longitude: longitude || '', 
					    success: (res) => {
					      console.log('wx.chooseLocation res=', res)
					      that.currentLocation = res
						  console.log(that.currentLocation)
					    },
					    fail: function (err) {
					      console.log('取消按钮', err)
					    }
					  })
					},
					handleOpenSetting () {
					  wx.openSetting({
					    success: (res) => {
					      console.log('定位 openSetting', res)
					      if (res.authSetting["scope.userLocation"]) {
					        this.handerChooseLocation()
					      }
					    }
					  })
					},
		
		addOrUpdateAddress(){
			
			if (this.validateForm()) {
				if (this.isStatus) {
					this.updateAddress();
					
				} else {
					this.addAddress();
					
				}
				// uni.$emit('addressUpdated', 'Success');  // 发出事件 用于更新界面
				
			}
        },
		async addAddress(){
				if(!this.currentLocation){
					uni.showToast({
						title:"请选择收货地址"
					})
					return
				}else{
					this.pathObj.city=this.currentLocation.address
					this.pathObj.details=this.currentLocation.name + ';'+this.pathObj.details
					this.pathObj.longitude = this.currentLocation.longitude
					this.pathObj.latitude = this.currentLocation.latitude
				}
				const url = '/api/user/addAddress';
				const method = 'POST'; 
				const data = {
				  pathObj: this.pathObj
				};
				try {
					const response = await request('yzy_app', url, method, data);
					console.log(response);		//统一格式：{"data":{}, "flag":99, "result":"成功"}
					if(response.code == 99){
						
						uni.showToast({
							title:'添加成功',
							icon:"none"
						});
						uni.navigateBack()
					}
					else {
						uni.showToast({
							title:'添加失败',
							icon:"none"
						});
					}
				} catch (error) {
					console.log(error);
					
				}
		},
		async updateAddress(){
				if(!this.currentLocation){
					uni.showToast({
						title:"请选择收货地址"
					})
					return
				}else{
					this.pathObj.city=this.currentLocation.address
					this.pathObj.details=this.currentLocation.name + this.pathObj.details
					this.pathObj.longitude = this.currentLocation.longitude
					this.pathObj.latitude = this.currentLocation.latitude
				}
				const url = '/api/user/updateAddress';
				const method = 'POST'; 
				const data = {
				  pathObj: this.pathObj
				};
				try {
					const response = await request('yzy_app', url, method, data);
					console.log(response);		//统一格式：{"data":{}, "flag":99, "result":"成功"}
					if(response.code.flag == 99){
						uni.showToast({
							title:'修改成功',
							icon:"none"
						});
						uni.navigateBack()
					}
					else {
						uni.showToast({
							title:'添加失败',
							icon:"none"
						});
					}
				} catch (error) {
					console.log(error);
				}
		},
		
        showPicker() {
          this.$refs.mpvuePicker.show();
        },
        onConfirm(e) {
          this.pathObj.city=e.label;
		  
        },
		radioChange(){
			 this.pathObj.isDefault = this.pathObj.isDefault === 0 ? 1 : 0;
		},
        validateForm() {
                if (!this.pathObj.name) {
                    uni.showToast({
                        title: '请输入收货人姓名',
                        icon: 'none'
                    });
                    return false;
                }

                if (!this.pathObj.tel) {
                    uni.showToast({
                        title: '请输入手机号码',
                        icon: 'none'
                    });
                    return false;
                }

                const phoneReg = /^[1][3,4,5,7,8,9][0-9]{9}$/;
                if (!phoneReg.test(this.pathObj.tel)) {
                    uni.showToast({
                        title: '手机号码格式错误',
                        icon: 'none'
                    });
                    return false;
                }

                if (!this.pathObj.details) {
                    uni.showToast({
                        title: '请输入详细地址',
                        icon: 'none'
                    });
                    return false;
                }

                return true;
            },
	    result(res) {
	    			this.pathObj.name = res.name;
	    			this.pathObj.tel = res.phone;
	    			this.pathObj.city = res.province + '-' + res.area + '-' + res.city;
	    			this.pathObj.details = res.detail;
	    		},		

		
	}
}
</script>


<style lang="scss" scoped>
.alter-address-button{
	border: 1px #1296DB solid;
	border-radius: 5px;
	color: #1296DB;
	padding: 5px;
	height: 15px;
	display: flex;
	justify-content: center;
	align-items: center;
}	
.choose-address-box{
	padding: 5px;
	border-radius: 10px;
	box-shadow: 2px -1px 10px 0.5px rgba(0, 0, 0, 0.2);
	display: flex;
	align-items: center;
}	
.address-container{
	
	width: 100%;
	border-radius: 15px;
	background: white;
}	
/deep/ .line {
	color: #4d4d4d;
	font-size: 28rpx;
}
.wrap {
	background-color: #f2f2f2;
	.top {
		background-color: #ffffff;
		border-top: solid 2rpx #aaa;
		padding: 3vw;
		.item {
			padding: 16rpx 16rpx;
			display: flex;
			font-size: 32rpx;
			line-height: 70rpx;
			align-items: center;
			border-bottom: solid 2rpx #F7F7F7;
			.left {
				width: 180rpx;
			}
			input {
				text-align: left;
			}
		}
		
		.address {
			padding: 20rpx 0;
			textarea {
				// width: 100%;
				height: 150rpx;
				background-color: #f7f7f7;
				line-height: 60rpx;
				margin: 40rpx auto;
				padding: 20rpx;
			}
		}
		.site-clipboard {
			padding-right: 40rpx;
			textarea {
				// width: 100%;
				height: 150rpx;
				background-color: #f7f7f7;
				line-height: 60rpx;
				margin: 40rpx auto;
				padding: 20rpx;
			}
			.clipboard {
				display: flex;
				justify-content: center;
				align-items: center;
				font-size: 26rpx;
				color: #F7F7F7;
				height: 80rpx;
				.icon {
					margin-top: 6rpx;
					margin-left: 10rpx;
				}
			}
		}
	}
.content-tip {
    background-color: #1296DB;
    color: white;
	margin: 0;
	border-radius: 20rpx;
	padding: 15rpx 10rpx;
}
.add-path-btn{
	text-align: center;
	background: linear-gradient(to right, #1296DB, #1296DB);
	color: #fff;
	border-radius: 50rpx;
	padding: 10rpx 220rpx;
    
   
}
}
</style>
